use('class');
db.movies.find();

// 1 - Altere o imdbRating para 7.7 no filme Batman .

use('class');
db.movies.updateOne(
  { title : {$eq: 'Batman'} },
  { $set: {imdbRating: 7.7} }
);

use('class');
db.movies.find(
  { title : {$eq: 'Batman'} },
);

// 2 - Altere budget para 1 no filme Godzilla .

use('class');
db.movies.updateOne(
  { title: { $eq: 'Godzilla' } },
  { $set: { budget: 1} }
);

use('class');
db.movies.find(
  { title : {$eq: 'Godzilla'} },
);

// 3 - Altere budget para 15 e imdbRating para 5.5 no filme Home Alone .

use('class');
db.movies.updateOne(
  { title: { $eq: 'Home Alone' } },
  { $set: { budget: 1, imdbRating: 5.5}
  }
);

use('class');
db.movies.find(
  { title : {$eq: 'Home Alone'} },
);

// 4 -  Aumente em 2 o imdbRating do filme Batman .

use('class');
db.movies.updateOne(
  { title : {$eq: 'Batman'} },
  { $inc: { imdbRating: 2} }
);

use('class');
db.movies.find(
  { title : {$eq: 'Batman'} },
);

// 5 - Aumente em 5 o budget do filme Home Alone .

use('class');
db.movies.updateOne(
  { title : { $eq: 'Home Alone' } },
  { $inc: { imdbRating: 5} }
);

use('class');
db.movies.find(
  { title : {$eq: 'Home Alone'} },
);

// 6 - Multiplique por 4 o imdbRating do filme Batman .

use('class');
db.movies.updateOne(
  { title : { $eq: 'Batman' } },
  { $mul: { imdbRating: 4 } }
);

// 7 - Renomeie o campo budget para estimatedBudget do filme Batman .

use('class');
db.movies.updateOne(
  { title : { $eq: 'Batman' } },
  { $rename: {
    "budget": "estimatedBudget"
  }}
);

use('class');
db.movies.find(
  { title : {$eq: 'Batman'} },
);

// 8 - Utilize o operador $min para alterar o budget para 5 do filme Home Alone .

use('class');
db.movies.updateOne(
  { title : { $eq: 'Batman' } },
  { $min: { budget: 5} }
);

use('class');
db.movies.find(
  { title : {$eq: 'Batman'} },
);

// 9 - Utilize o operador $max para alterar o imdbRating para 8.6 do filme Godzilla . 
// Além disso, altere a categoria "adventure" para "thriller" do filme Godzilla .

use('class');
db.movies.updateOne(
  { title : { $eq: 'Godzilla' } },
  { 
    $max: { imdbRating: 8.6 } ,
    $set: {"category.1": "thriller" }
  },
);

use('class');
db.movies.find(
  { title : {$eq: 'Godzilla'} },
);

// 10 - Utilizando o operador $currentDate , crie um campo chamado lastUpdated com o tipo timestamp no filme Home Alone .

db.movies.updateOne(
  { title : {$eq: 'Home Alone'} },
  { $currentDate: {
    lastUpdated: { $type: "timestamp" },
  }}
);

use('class');
db.movies.find(
  { title : {$eq: 'Home Alone'} },
);

// 11 - Utilizando uma única operação, crie um campo chamado sequels e atribua a ele o valor 0 em todos os documentos.

db.movies.updateMany(
  {},
  { $set: { sequels: 0 } },
);

use('class');
db.movies.find();

// 12 -  Utilizando uma única operação, remova os campos budget e estimatedBudget em todos os documentos.

db.movies.updateMany(
  {},
  {
    $unset: {
      budget: "",
      estimatedBudget: "",
    },
  },
);

use('class');
db.movies.find();